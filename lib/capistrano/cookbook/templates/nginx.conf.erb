upstream unicorn_<%= fetch(:full_app_name) %> {
  server unix:/tmp/unicorn.<%= fetch(:full_app_name) %>.sock fail_timeout=0;
}

<% if fetch(:enable_ssl) %>
server {
  listen 80;
  server_name <%= fetch(:server_name) %>;
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  root <%= fetch(:deploy_to) %>/current/public;
  server_name <%= fetch(:server_name) %>;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn_<%= fetch(:full_app_name) %>;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
  ssl on;
  ssl_certificate /etc/ssl/ssl_cert.crt;
  ssl_certificate_key /etc/ssl/ssl_private_key.key;
}
<% else %>
server {
  listen 80;
  root <%= fetch(:deploy_to) %>/current/public;
  server_name <%= fetch(:server_name) %>;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @unicorn;
  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn_<%= fetch(:full_app_name) %>;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
<% end %>